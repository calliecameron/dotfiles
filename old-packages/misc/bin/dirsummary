#!/usr/bin/env python3
# List the number and total size of each type of file in a directory tree

import os
import sys

top = '.'

if len(sys.argv) > 1:
    top = sys.argv[1]

if not os.path.isdir(top):
    print("'%s' is not a directory" % top)
    sys.exit(1)

specialCases = [(lambda f: f.lower() == 'makefile', 'Makefile')]
out = {}
noExt = (0, 0)


def addFile(key, size):
    if key in out:
        (count, total) = out[key]
        out[key] = (count + 1, total + size)
    else:
        out[key] = (1, size)


def addNoExt(size):
    global noExt
    (count, total) = noExt
    noExt = (count + 1, total + size)


for (path, dirs, files) in os.walk(top):
    for f in files:
        found = False

        for (pred, key) in specialCases:
            if pred(f):
                addFile(key, os.path.getsize(os.path.join(path, f)))
                found = True
                break

        if not found:
            s = os.path.splitext(f)[1][1:]

            if s:
                addFile(s, os.path.getsize(os.path.join(path, f)))
            else:
                addNoExt(os.path.getsize(os.path.join(path, f)))


col1len = 0
keys = list(out.keys())
noExtStr = 'No extension'
keys.append(noExtStr)

for s in keys:
    if len(s) > col1len:
        col1len = len(s)

col1len += 2


col2len = 0
counts = [str(i) for (i, size) in list(out.values())]
counts.append(str(noExt[0]))

for s in counts:
    if len(s) > col2len:
        col2len = len(s)

col2len += 2


def prettySize(num):
    for x in ['bytes', 'KB', 'MB', 'GB', 'TB']:
        if num < 1024.0:
            return "%3.1f %s" % (num, x)
        num /= 1024.0

if noExt[0] > 0:
    print(noExtStr +
          (' '*(col1len - len(noExtStr))) +
          str(noExt[0]) +
          (' '*(col2len - len(str(noExt[0])))) +
          prettySize(noExt[1]))

for k in sorted(out.keys()):
    print(k +
          (' '*(col1len - len(k))) +
          str(out[k][0]) +
          (' '*(col2len - len(str(out[k][0])))) +
          prettySize(out[k][1]))
