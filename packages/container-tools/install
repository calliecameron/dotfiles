#!/bin/bash

set -eu

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME}") stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null

sudo apt-get update
sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin uidmap

sudo systemctl disable docker.service
sudo systemctl stop docker.service

dockerd-rootless-setuptool.sh install

systemctl --user enable docker.service
systemctl --user start docker.service

docker context use rootless


dotfiles-nix-install crun podman podman.man x11docker

PODMAN_CONF_DIR="${HOME}/.config/containers"
dotfiles-home-link "${PACKAGE_SOURCE_DIR}/podman-policy.json" "${PODMAN_CONF_DIR}/policy.json"
dotfiles-home-link "${PACKAGE_SOURCE_DIR}/podman-registries.conf" "${PODMAN_CONF_DIR}/registries.conf"

echo '# Auto-generated, will be overwritten' > "${PODMAN_CONF_DIR}/storage.conf"
cat "${PACKAGE_SOURCE_DIR}/podman-storage.conf" >> "${PODMAN_CONF_DIR}/storage.conf"

if [ -n "${DOTFILES_PODMAN_STORAGE_DIR:-}" ]; then
    echo "graphroot = \"${DOTFILES_PODMAN_STORAGE_DIR}\"" >> "${PODMAN_CONF_DIR}/storage.conf"
    echo "rootless_storage_path = \"${DOTFILES_PODMAN_STORAGE_DIR}\"" >> "${PODMAN_CONF_DIR}/storage.conf"
fi


x11docker --build x11docker/xserver
x11docker --backend=podman --build x11docker/xserver
